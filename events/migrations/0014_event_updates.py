# Generated by Django 4.2.13 on 2025-08-04 11:06

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0013_alter_baseevent_polymorphic_ctype_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pricelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ServicePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('pricelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.pricelist')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.service')),
            ],
        ),
        migrations.AddField(
            model_name='pricelist',
            name='services',
            field=models.ManyToManyField(related_name='pricelists', through='events.ServicePrice', to='events.service'),
        ),
        migrations.AddField(
            model_name='serviceinstance',
            name='pricelist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='events.pricelist'),
        ),
        migrations.AddConstraint(
            model_name='serviceprice',
            constraint=models.UniqueConstraint(fields=('service', 'pricelist'), name='unique_service_pricelist'),
        ),
        migrations.RemoveField(
            model_name='serviceinstance',
            name='pricelist',
        ),
        migrations.AddField(
            model_name='event2019',
            name='pricelist',
            field=models.ForeignKey(blank=True, help_text='Which pricelist this event will be billed using.', null=True, on_delete=django.db.models.deletion.PROTECT, to='events.pricelist'),
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('categories', models.ManyToManyField(to='events.category')),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('categories', models.ManyToManyField(to='events.category')),
            ],
        ),
        migrations.CreateModel(
            name='FeePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=2, max_digits=8)),
                ('fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.fee')),
                ('pricelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.pricelist')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.discount')),
                ('pricelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.pricelist')),
            ],
        ),
        migrations.AddField(
            model_name='event2019',
            name='applied_discounts',
            field=models.ManyToManyField(to='events.discount'),
        ),
        migrations.AddField(
            model_name='event2019',
            name='applied_fees',
            field=models.ManyToManyField(to='events.fee'),
        ),
        migrations.AddField(
            model_name='pricelist',
            name='discounts',
            field=models.ManyToManyField(related_name='pricelists', through='events.DiscountPrice', to='events.discount'),
        ),
        migrations.AddField(
            model_name='pricelist',
            name='fees',
            field=models.ManyToManyField(related_name='pricelists', through='events.FeePrice', to='events.fee'),
        ),
        migrations.AddConstraint(
            model_name='feeprice',
            constraint=models.UniqueConstraint(fields=('fee', 'pricelist'), name='unique_service_fee'),
        ),
        migrations.AddConstraint(
            model_name='discountprice',
            constraint=models.UniqueConstraint(fields=('discount', 'pricelist'), name='unique_service_discount'),
        ),
        migrations.AlterField(
            model_name='discount',
            name='categories',
            field=models.ManyToManyField(help_text='Which categories this discount applies to', related_name='possible_discounts', to='events.category'),
        ),
        migrations.AddField(
            model_name='event2019',
            name='uses_new_discounts',
            field=models.BooleanField(default=False, help_text='Whether or not this event uses the new discount system.'),
        ),
        migrations.AddField(
            model_name='discount',
            name='required_categories',
            field=models.ManyToManyField(blank=True, help_text='Which categories must exist in an event for this discount to automatically apply', related_name='discounts_that_require_this_category', to='events.category'),
        ),
        migrations.AlterField(
            model_name='event2019',
            name='applied_discounts',
            field=models.ManyToManyField(blank=True, help_text='Which discounts will be applied to this event.', to='events.discount'),
        ),
        migrations.AlterField(
            model_name='event2019',
            name='applied_fees',
            field=models.ManyToManyField(blank=True, help_text='Which fees will be applied to this event.', to='events.fee'),
        ),
        migrations.AlterField(
            model_name='fee',
            name='categories',
            field=models.ManyToManyField(help_text='Which categories of services this fee will apply to', to='events.category'),
        ),
        migrations.CreateModel(
            name='ExtraPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('extra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.extra')),
                ('pricelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.pricelist')),
            ],
        ),
        migrations.AddConstraint(
            model_name='extraprice',
            constraint=models.UniqueConstraint(fields=('extra', 'pricelist'), name='unique_extra_pricelist'),
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('rental_fee_applied', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='events.baseevent')),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_generated', models.DateTimeField(default=django.utils.timezone.now)),
                ('html', models.TextField()),
                ('is_invoice', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='events.baseevent')),
            ],
            options={
                'ordering': ('-date_generated',),
            },
        ),
        migrations.AddField(
            model_name='pricelist',
            name='rental_fee_percentage',
            field=models.DecimalField(decimal_places=2, default=15, max_digits=8),
        ),
        migrations.CreateModel(
            name='EventOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('display_on_cal', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrences', to='events.baseevent')),
            ],
            options={
                'ordering': ('start',),
            },
        ),
    ]
